apiVersion: v1
kind: Service
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: my-app
    version: v1.0.0
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-shadow
  labels:
    app: my-app
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: my-app
    version: v2.0.0
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-app-v1
  labels:
    app: my-app
    version: v1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
      version: v1.0.0
  template:
    metadata:
      labels:
        app: my-app
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9101"
    spec:
      containers:
      - name: my-app
        image: ludo/k8s-deployment-demo
        ports:
        - name: http
          containerPort: 8080
        - name: probe
          containerPort: 8086
        - name: metrics
          containerPort: 9101
        env:
        - name: VERSION
          value: v1.0.0
        livenessProbe:
          httpGet:
            path: /live
            port: probe
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: probe
          periodSeconds: 5

      # This sidecar container capture incoming TCP traffic and replay it in
      # real time to the my-app-v2 service.
      # Ref: https://github.com/buger/goreplay
      - name: goreplay
        image: buger/goreplay
        args:
        - --input-raw=:8080
        - --output-http=my-app-shadow:80
        - --verbose
